import datetime
import logging
import random
import time
import requests
import os

from sample.prestashop_api import PrestaShopWebService, Product
from sample import database
from sample.facebook_api import FacebookPage

FACEBOOK_ACCESS = {
    'user_access_token': os.getenv('FACEBOOK_USER_ACCESS_TOKEN'),
    "page_id": os.getenv('FACEBOOK_PAGE_ID')
}

PRESTASHOP_ACCESS = {
    'api': os.getenv('PRESTASHOP_API'),
    'api_key': os.getenv('PRESTASHOP_API_KEY')
}

def main():
    # Facebook page access initiation
    page = FacebookPage(FACEBOOK_ACCESS['user_access_token'], FACEBOOK_ACCESS["page_id"])
    # Prestashop access initiation
    shop = PrestaShopWebService(PRESTASHOP_ACCESS['api'], PRESTASHOP_ACCESS['api_key'])

    product = pick_product(shop, database.get_all_id())

    # Add product_id to posted product database
    database.add(product.id)

    # Post product link to facebook page
    message = ''  # TODO message generated by AI
    page.put_object(link=product.url, message=message)


def pick_product(shop: PrestaShopWebService, posted_id: list) -> Product:
    active_id = set(shop.get_id_products_active())
    available_id = list(active_id.difference(posted_id))
    return Product(shop, random.choice(available_id))


def connection(website: str):
    logging.basicConfig(filename='./connection.log', encoding='utf-8', level=logging.DEBUG)
    # initializing URL
    url = website
    timeout = 10
    try:
        # requesting URL
        request = requests.get(url, timeout=timeout)
        logging.debug(f"{datetime.datetime.now()}{request.status_code}")
        return True
    # catching exception
    except requests.exceptions.ConnectionError:
        return False
    except requests.exceptions.Timeout:
        logging.debug(F'Timeout exception at {datetime.datetime.now()}')
        return False


if __name__ == '__main__':
    while not connection(PRESTASHOP_ACCESS['api']):
        time.sleep(60)
    main()
